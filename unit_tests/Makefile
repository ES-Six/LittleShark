#############################################################################
# Makefile for building: qtunit-example
# Generated by qmake (2.01a) (Qt 4.8.7) on: jeu. nov. 1 10:25:33 2018
# Project:  cppunit-example.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile cppunit-example.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_TESTLIB_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtTest -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -m64
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtTest -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = ../PacketGenerator.cpp \
		UnitTests.cpp \
		../PCAPFileReader.cpp \
		../packet_wrapper.cpp \
		../CEthenetFrame.cpp \
		../CNetworkSniffer.cpp \
		../CPacket.cpp \
		../DNSParser.cpp \
		../httpDetector.cpp 
OBJECTS       = PacketGenerator.o \
		UnitTests.o \
		PCAPFileReader.o \
		packet_wrapper.o \
		CEthenetFrame.o \
		CNetworkSniffer.o \
		CPacket.o \
		DNSParser.o \
		httpDetector.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		cppunit-example.pro
QMAKE_TARGET  = qtunit-example
DESTDIR       = 
TARGET        = qtunit-example

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9][^0-9]*\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: cppunit-example.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtTest.prl \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile cppunit-example.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtTest.prl:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++-64 CONFIG+=debug -o Makefile cppunit-example.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qtunit-example1.0.0 || $(MKDIR) .tmp/qtunit-example1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qtunit-example1.0.0/ && $(COPY_FILE) --parents ../PacketGenerator.h ../PCAPFileReader.h ../packet_wrapper.h ../CEthenetFrame.h ../CNetworkSniffer.h ../CPacket.h ../DNSParser.h ../httpDetector.h .tmp/qtunit-example1.0.0/ && $(COPY_FILE) --parents ../PacketGenerator.cpp UnitTests.cpp ../PCAPFileReader.cpp ../packet_wrapper.cpp ../CEthenetFrame.cpp ../CNetworkSniffer.cpp ../CPacket.cpp ../DNSParser.cpp ../httpDetector.cpp .tmp/qtunit-example1.0.0/ && (cd `dirname .tmp/qtunit-example1.0.0` && $(TAR) qtunit-example1.0.0.tar qtunit-example1.0.0 && $(COMPRESS) qtunit-example1.0.0.tar) && $(MOVE) `dirname .tmp/qtunit-example1.0.0`/qtunit-example1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qtunit-example1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all: UnitTests.moc
compiler_moc_source_clean:
	-$(DEL_FILE) UnitTests.moc
UnitTests.moc: ../PacketGenerator.h \
		../PCAPFileReader.h \
		../pcap_file_headers.h \
		../packet_wrapper.h \
		UnitTests.cpp
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) UnitTests.cpp -o UnitTests.moc

compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_source_clean 

####### Compile

PacketGenerator.o: ../PacketGenerator.cpp ../PacketGenerator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PacketGenerator.o ../PacketGenerator.cpp

UnitTests.o: UnitTests.cpp ../PacketGenerator.h \
		../PCAPFileReader.h \
		../pcap_file_headers.h \
		../packet_wrapper.h \
		UnitTests.moc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o UnitTests.o UnitTests.cpp

PCAPFileReader.o: ../PCAPFileReader.cpp ../PCAPFileReader.h \
		../pcap_file_headers.h \
		../packet_wrapper.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PCAPFileReader.o ../PCAPFileReader.cpp

packet_wrapper.o: ../packet_wrapper.cpp ../packet_wrapper.h \
		../pcap_file_headers.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o packet_wrapper.o ../packet_wrapper.cpp

CEthenetFrame.o: ../CEthenetFrame.cpp ../CEthenetFrame.h \
		../CPacket.h \
		../DNSParser.h \
		../httpDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CEthenetFrame.o ../CEthenetFrame.cpp

CNetworkSniffer.o: ../CNetworkSniffer.cpp ../CNetworkSniffer.h \
		../CEthenetFrame.h \
		../CPacket.h \
		../DNSParser.h \
		../httpDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CNetworkSniffer.o ../CNetworkSniffer.cpp

CPacket.o: ../CPacket.cpp ../CPacket.h \
		../DNSParser.h \
		../httpDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CPacket.o ../CPacket.cpp

DNSParser.o: ../DNSParser.cpp ../DNSParser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DNSParser.o ../DNSParser.cpp

httpDetector.o: ../httpDetector.cpp ../httpDetector.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o httpDetector.o ../httpDetector.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

